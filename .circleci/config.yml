version: 2.1
jobs:
  build:
    docker:
      - image: cimg/base:2021.04
      - image: circleci/postgres:9.6-alpine
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgresql
    steps:
      - checkout
      - run: |
             sudo apt-get update 
             sudo apt-get install cppcheck 
            
      - run: |
             sudo apt-get update 
             sudo apt-get install clang-format 
             
      - run: |
             sudo apt-get update
             sudo apt-get install valgrind
             
      - run: |
             sudo apt-get update
             sudo apt-get install build-essential
             
      - run: |
             sudo apt-get update
             sudo apt-get install g++
             
      - run: |
             sudo apt-get update
             sudo apt-get install cmake
             
      - run: |
             sudo apt-get update
             sudo apt-get install wget
             
      - run: |
             sudo apt-get update
             sudo apt-get install libboost-all-dev
          
      - run: |
             sudo apt update
             sudo apt-get install libgtest-dev
             cd /usr/src/gtest
             sudo cmake .
             sudo make
             sudo cp -R /usr/src/gtest/lib/*.a /usr/lib/x86_64-linux-gnu
             
      - run: |
             sudo apt-get update
             sudo apt-get install gcovr
             
      - run: |
             cppcheck ./*/*.cpp ./*/*.hpp

       #Install postgresql and create user and db

      - run: |
             sudo apt-get update
             sudo apt-get install -y postgresql

      - run: | 
          psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE test_db;"
          psql -h 127.0.0.1 -U postgres -c "CREATE USER tester WITH PASSWORD 'test_password'; GRANT ALL PRIVILEGES ON DATABASE test_db TO tester;"
          psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE bauman_tinder;"
          psql -h 127.0.0.1 -U postgres -c "CREATE USER server WITH PASSWORD 'password'; GRANT ALL PRIVILEGES ON DATABASE bauman_tinder TO server;"
          sudo service postgresql start


       #Install libpqxx

      - run: |
             git clone https://github.com/jtv/libpqxx.git
             cd libpqxx
             ./configure
             make -j4
             sudo make install
             
      - run: |
             cppcheck ./*/*.cpp ./*/*.hpp
             
      - run: |
             wget -c https://github.com/emweb/wt/archive/4.5.0.tar.gz
             tar xvxf 4.5.0.tar.gz
             cd wt-4.5.0
             mkdir build
             cd build
             sudo cmake ..
             sudo make wt wthttp -j4
             sudo make install
             sudo ln -s /usr/local/lib/libwt.so /usr/lib/
             
      - run: |
            cd src_client
            cppcheck -I {{../headers_client}} —inconclusive —enable=all —language=c++ —check-config —suppress=missingIncludeSystem —error-exitcode=1 *.cpp
            
      - run: |
            cd src_client
            clang-format -i -style=WebKit *.cpp
            
      - run: |
             mkdir cmake-built
             cd cmake-built
             cmake ..
             make
             ./Bauman_Tinder "--docroot .. --http-address 0.0.0.0 --http-port 9000 --config ../wt_config.xml"
             
      - run: |
             cd cmake-built
             valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all --error-exitcode=1 ./Bauman_Tinder "--docroot .. --http-address 0.0.0.0 --http-port 9000 --config ../wt_config.xml"
             
      - run: |
             mkdir build_db
             cd build_db
             cmake .. -DBUILD_MAIN=OFF -DBUILD_TESTS=ON
             make
             valgrind --leak-check=full ./tests_db 
             valgrind --leak-check=full ./tests_rec
